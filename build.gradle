buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: "java"

version = "1.12.2-2.0.3"
group= "hellfirepvp.beebetteratbees"
archivesBaseName = "beebetteratbees"

minecraft {
    version = "14.23.4.2751"
    runDir = "run"
    useDepAts = true

    mappings = "snapshot_20180415"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

compileApiJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

repositories {

    maven {
        // location of the maven that hosts JEI files
        url = "http://dvs1.progwml6.com/files/maven"
    }

    maven {
        // forestry stuff
        url = "http://maven.ic2.player.to"
    }

}

dependencies {

    def mc_version = "1.12.2"
    def jei_version = "4.8.5.151"
    def forestry_version = "5.8.1.350"

    ////JEI stuff
    deobfCompile "mezz.jei:jei_${mc_version}:${jei_version}"

    deobfCompile "net.sengir.forestry:forestry_${mc_version}:${forestry_version}"

}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task signMainJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf { // Skip the task if our secret data isn't available
        project.hasProperty('keyStore')
    }
    if (project.hasProperty('keyStore')) { // This needs to be a path to the keystore file
        keyStore = project.keyStore
        alias = project.alias
        storePass = project.storePass
        keyPass = project.keyPass
        inputFile = jar.archivePath
        outputFile = jar.archivePath
    }
}
build.dependsOn signMainJar

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
                
        // replace version and mcversion
        expand "version": project.version, "mcversion": "1.12"
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}
